[
# Status of SELINUX
  {
    "title": "selinux",
    "id": "selinux",
    "sType": "string",
    "visible": False,
    "jsonxs": "ansible_facts.ansible_selinux.status"
  },
# Python Versions
  {
    "title": "Python_ver",
    "id": "pyver",
    "sType": "string",
    "visible": False,
    "jsonxs": "ansible_facts.ansible_python_version"
  },
# Name of Package Managers
  {
    "title": "Package_Manager",
    "id": "pkgmgr",
    "sType": "string",
    "visible": False,
    "jsonxs": "ansible_facts.ansible_pkg_mgr"
  },
# Name of Service Managers
  {
    "title": "Service_mgr",
    "id": "srvmgr",
    "sType": "string",
    "visible": False,
    "jsonxs": "ansible_facts.ansible_service_mgr"
  },
# LVM Volumes
  {
    "title": "lvm-volumes",
    "id": "lvm-volumes",
    "sType": "string",
    "visible": False,
    "tpl": """
      <ul>
        <%
        # Get ansible_facts.ansible_lvm.lvs using jsonxs
        lvs = jsonxs(host, 'ansible_facts.ansible_lvm.lvs', default={})
        %>
        % for part, partValues in lvs.items():
          <li>${part} = ${round(float(partValues['size_g']))} GB</li>
        % endfor
      </ul>
    """
  },
# Mount Points of devices
  {
    "title": "mounts",
    "id": "mounts",
    "sType": "string",
    "visible": False,
    "tpl": """
      <ul>
        <%
        # Get ansible_facts.ansible_lvm.lvs using jsonxs
        mounts = jsonxs(host, 'ansible_facts.ansible_mounts', default=[])
        %>
        % for mount in mounts:
          <li>${mount['device']} = ${mount['mount']}</li>
        % endfor
      </ul>
    """
  },
# Information Time
  {
    "title": "information_time",
    "id": "infTime",
    "sType": "string",
    "visible": False,
    "tpl": """
      <ul>
        <%
        # Get ansible_facts.ansible_date_time using jsonxs
        dateTime = jsonxs(host, 'ansible_facts.ansible_date_time', default={})
        %>
        <li>${dateTime['date']}-${dateTime['time']}</li>
      </ul>
    """
  },
]
